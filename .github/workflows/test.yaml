# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Test
on:
  workflow_call:
    inputs:
      log-level:
        type: string
        description: |
          The logging level for the devcontainer CLI tool.

          Defaults to `info`.

          Valid options are:
            * `info`
            * `debug`
            * `trace`
        required: false
        default: "info"
    secrets:
      github-token:
        description: |
          The token to use for making authenticated calls to the GitHub APIs.
        required: false
jobs:
  setup-checks:
    name: Setup Checks
    runs-on: ubuntu-latest
    permissions:
      #-- Needed to update check statuses
      checks: write
    outputs:
      check-id: ${{steps.setup-checks.outputs.check-id}}
    env:
      GITHUB_TOKEN: ${{secrets.github-token || secrets.GITHUB_TOKEN}}
    steps:
      - id: setup-checks
        name: Setup check(s)
        run: |
          gh api --method POST -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" /repos/${GITHUB_REPOSITORY}/check-runs \
            -f "name=Test / Test (${{github.event_name}})" -f "head_sha=${GITHUB_SHA}" -f "status=in_progress" \
            -f "started_at=$(date --iso-8601=seconds --utc)" -f "output[title]=Test Run" \
            -f "output[summary]=" -f "output[text]=" \
            -f "details_url=https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" \
            --jq '.id' > check_id;
          echo "::debug::Created check run with ID '$(cat check_id)'";
          echo "check-id=$(cat check_id)" >> "$GITHUB_OUTPUT";
  test-autogenerated:
    name: Test Autogenerated
    needs:
      - setup-checks
    permissions:
      #-- Needed to clone the repository
      contents: read
    strategy:
      fail-fast: true
      matrix:
        base-image:
          - debian:latest
          - ubuntu:latest
          - mcr.microsoft.com/devcontainers/base:ubuntu
    uses: ./.github/workflows/test-autogenerated.yaml
    with:
      base-image: ${{matrix.base-image}}
    secrets:
      github-token: ${{secrets.GITHUB_TOKEN}}
  test-global:
    name: Test Global
    needs:
      - setup-checks
    permissions:
      #-- Needed to clone the repository
      contents: read
    uses: ./.github/workflows/test-global.yaml
    secrets:
      github-token: ${{secrets.GITHUB_TOKEN}}
  test-scenarios:
    name: Test Scenarios
    needs:
      - setup-checks
    permissions:
      #-- Needed to clone the repository
      contents: read
    strategy:
      fail-fast: true
      matrix:
        base-image:
          - debian:latest
          - ubuntu:latest
          - mcr.microsoft.com/devcontainers/base:ubuntu
    uses: ./.github/workflows/test-scenarios.yaml
    with:
      base-image: ${{matrix.base-image}}
    secrets:
      github-token: ${{secrets.GITHUB_TOKEN}}
  finalize-checks:
    name: Finalizer Checks
    runs-on: ubuntu-latest
    needs:
      - setup-checks
      - test-autogenerated
      - test-global
      - test-scenarios
    permissions:
      #-- Needed to update check statuses
      checks: write
    env:
      GITHUB_TOKEN: ${{secrets.github-token || secrets.GITHUB_TOKEN}}
    steps:
      - id: finalize-checks
        name: Finalize checks
        run: |
          if [[ "${{needs.test-autogenerated.result}}" != "success" ]]; then
            gh api --method PATCH -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/${GITHUB_REPOSITORY}/check-runs/${{needs.setup-checks.outputs.check-id}} \
              -f "status=completed" -f "conclusion=${{needs.test-autogenerated.result}}" \
              -f "completed_at=$(date --iso-8601=seconds --utc)" \
              -f "output[summary]=Workflow 'Test Autogenerated' failed with result '${{needs.test-autogenerated.result}}'" \
              -f "details_url=https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}";
          elif [[ "${{needs.test-global.result}}" != "success" ]]; then
            gh api --method PATCH -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/${GITHUB_REPOSITORY}/check-runs/${{needs.setup-checks.outputs.check-id}} \
              -f "status=completed" -f "conclusion=${{needs.test-global.result}}" \
              -f "completed_at=$(date --iso-8601=seconds --utc)" \
              -f "output[summary]=Workflow 'Test Global' failed with result '${{needs.test-global.result}}'" \
              -f "details_url=https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}";
          elif [[ "${{needs.test-scenarios.result}}" != "success" ]]; then
            gh api --method PATCH -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/${GITHUB_REPOSITORY}/check-runs/${{needs.setup-checks.outputs.check-id}} \
              -f "status=completed" -f "conclusion=${{needs.test-scenarios.result}}" \
              -f "completed_at=$(date --iso-8601=seconds --utc)" \
              -f "output[summary]=Workflow 'Test Scenarios' failed with result '${{needs.test-scenarios.result}}'" \
              -f "details_url=https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}";
          else
            gh api --method PATCH -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/${GITHUB_REPOSITORY}/check-runs/${{needs.setup-checks.outputs.check-id}} \
              -f "status=completed" -f "conclusion=success" \
              -f "completed_at=$(date --iso-8601=seconds --utc)" \
              -f "output[summary]=Passed" -f "output[text]=All workflows passed." \
              -f "details_url=https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}";
          fi
