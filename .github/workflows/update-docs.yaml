# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Update Docs
on:
  workflow_call:
    secrets:
      github-token:
        description: |
          The token to use for making authenticated calls to the GitHub APIs.
        required: false
jobs:
  update-docs:
    name: Update Docs
    runs-on: ubuntu-latest
    #-- Only run on the main branch
    if: github.ref == 'refs/heads/main'
    permissions:
      #-- Needed to write to the repository
      contents: write
      #-- Needed to create a pull request
      pull-requests: write
    steps:
      - id: checkout-repository
        name: Checkout repository
        uses: actions/checkout@v4
        with:
          clean: true
          lfs: true
          submodules: recursive
          token: ${{secrets.github-token || secrets.GITHUB_TOKEN}}
      - id: generate-updated-docs
        name: Generate updated docs
        uses: devcontainers/action@v1
        env:
          GITHUB_TOKEN: ${{secrets.github-token || secrets.GITHUB_TOKEN}}
        with:
          generate-docs: true
          base-path-to-features: ./src/
          disable-repo-tagging: true
      - id: generate-pull-request
        name: Generate pull request
        env:
          GITHUB_TOKEN: ${{secrets.github-token || secrets.GITHUB_TOKEN}}
        run: |
          set -e
          echo "::debug::Beginning to generate pull request..."
          # Configure Git
          git config --global user.email github-actions@github.com
          git config --global user.name github-actions
          git config pull.rebase false
          declare BRANCH="docs/automated-update/$GITHUB_RUN_ID"
          git checkout -b "$BRANCH"
          declare MESSAGE="Automated documentation update for GitHub workflow run $GITHUB_RUN_ID."
          git add */**/README.md
          git commit --message "[skip ci] $MESSAGE" || export NO_UPDATES="true"

          if [[ "$NO_UPDATES" != "true" ]]; then
            git push origin "$BRANCH"
            gh api --method POST /repos/${GITHUB_REPOSITORY}/pulls -f title="$MESSAGE" -f head="$BRANCH" -f base="main"
          fi
